services:
  db:
    image: mdillon/postgis:11
    restart: always
    expose:
      - 5432
    ports:
      - "5464:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  mongo:
    image: mongo:latest
    restart: always
    expose:
      - 27017
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  wx_explore:
    build: .
    ports:
      - "5000:8080"
    environment:
      POSTGRES_HOST: 'db'
      POSTGRES_PORT: '5432'
      INGEST_MONGO_SERVER_URI: 'mongodb://mongo:27017/'
    volumes:
      - ./wx_explore:/opt/wx_explore/wx_explore
    depends_on:
      db:
        condition: service_healthy
      mongo:
        condition: service_healthy
    restart: on-failure

  ui:
    build: ui/wx_explore
    ports:
      - "3000:3000"
    volumes:
      - ./ui/wx_explore/src:/app/src
    environment:
      REACT_APP_API_ENDPOINT: 'http://localhost:5000/api'
      #REACT_APP_API_ENDPOINT: 'https://api.vortexweather.tech/api'  # live endpoint which should already have data
