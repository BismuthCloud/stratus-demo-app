{"version":3,"sources":["Api.js","ForecastView.js","LocationSearch.js","Units.js","App.js","index.js"],"names":["axios","create","baseURL","process","REACT_APP_API_ENDPOINT","timeout","lineColors","metricsToDisplay","capitalize","s","toUpperCase","substring","ForecastView","props","state","location","metrics","sources","source_fields","summary","wx","t","Math","round","Date","getTime","Api","get","params","lat","this","lon","start","end","then","data","setState","days","src","id","fields","field","metric","undefined","match","loc_id","name","prevProps","prevState","getWx","ordered_times","ts","data_point","source_field","src_field_id","metric_id","source","source_id","run_time","converter","convert","value","units","val","push","x","y","datasets","includes","earliest_run","latest_run","alpha","run_name","moment","unix","utc","format","color","short_name","label","fill","backgroundColor","borderColor","pointBorderColor","day","cloudCoverIcon","cloud_cover","cover","Row","className","Col","md","style","fontSize","temps","temperature","high","low","components","entries","index","component","text","type","key","Spinner","animation","role","charts","chartjsData","options","scales","xAxes","distribution","time","unit","ticks","min","max","add","legend","display","opts","title","coreMetricsBox","summarize","React","Component","LocationResult","loc","LocationSearchField","isLoading","_handleSearch","query","q","placeholder","minLength","onSearch","labelKey","renderMenuItemChildren","option","onChange","selected","length","UnitConverter","n","decimalPlaces","pow","Imperial","App","unitConverter","pathname","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","history","year","getFullYear","Navbar","bg","variant","Brand","Nav","Form","inline","Container","marginTop","path","fluid","height","xs","target","rel","href","icon","faGithub","size","lineHeight","withRouter","Sentry","dsn","SENTRY_DSN","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d3590cc.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: process.env.REACT_APP_API_ENDPOINT,\n    timeout: 30000,\n});\n","import React from 'react';\nimport moment from 'moment';\nimport {Line as LineChart} from 'react-chartjs-2';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Spinner from 'react-bootstrap/Spinner';\n\nimport Api from './Api';\n\nconst lineColors = {\n  'hrrr': '255,0,0',\n  'gfs':  '0,255,0',\n  'nam':  '0,0,255',\n};\n\nconst metricsToDisplay = [\n  \"1\", // temperature\n  \"3\", // rain\n  \"6\", // snow\n  \"12\", // wind\n  \"15\", // cloud cover\n];\n\nfunction capitalize(s) {\n  return s[0].toUpperCase() + s.substring(1)\n}\n\nexport default class ForecastView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: null,\n      metrics: null,\n      sources: null,\n      source_fields: null,\n      summary: null,\n      wx: null,\n    };\n  }\n\n  getWx() {\n    let t = Math.round((new Date()).getTime() / 1000);\n\n    Api.get(\"/wx\", {\n      params: {\n        lat: this.state.location.lat,\n        lon: this.state.location.lon,\n        start: t,\n        end: t + (3 * 24 * 60 * 60), // 3 days out\n      },\n    }).then(({data}) => this.setState({wx: data}));\n\n    Api.get(\"/wx/summarize\", {\n      params: {\n        lat: this.state.location.lat,\n        lon: this.state.location.lon,\n        days: 1,\n      },\n    }).then(({data}) => this.setState({summary: data}));\n  }\n\n  componentDidMount() {\n    Api.get(\"/sources\").then(({data}) => {\n        let sources = {}\n        let source_fields = {};\n        for (let src of data) {\n            sources[src.id] = src;\n            for (let field of src.fields) {\n                source_fields[field.id] = field;\n            }\n        }\n        this.setState({sources, source_fields});\n    });\n\n    Api.get(\"/metrics\").then(({data}) => {\n        let metrics = {}\n        for (let metric of data) {\n            metrics[metric.id] = metric;\n        }\n        this.setState({metrics});\n    });\n    \n    if (this.props.match.params.loc_id !== undefined) {\n      Api.get(`/location/${this.props.match.params.loc_id}`).then(({data}) => {\n        this.setState({location: data});\n      });\n    } else if (this.props.match.params.lat !== undefined && this.props.match.params.lon !== undefined) {\n      Api.get(\"/location/by_coords\", {\n        params: {\n          lat: this.props.match.params.lat,\n          lon: this.props.match.params.lon,\n        },\n      }).then(({data}) => {\n        this.setState({\n          location: {\n            lat: this.props.match.params.lat,\n            lon: this.props.match.params.lon,\n            name: `Near ${data.name}`,\n          }\n        });\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // only attempt to fetch when we have a location...\n    if (this.state.location == null) {\n      return;\n    }\n    \n    // ... or when location changed\n    if (prevState.location === this.state.location) {\n      return;\n    }\n\n    this.setState({wx: null, summary: null});\n    this.getWx();\n  }\n\n  chartjsData() {\n    let metrics = {}; // map[metric_id, map[source_id, map[run_time, list]]] \n\n    for (const ts of this.state.wx.ordered_times) {\n      for (const data_point of this.state.wx.data[ts]) {\n        const source_field = this.state.source_fields[data_point.src_field_id]\n        const metric = this.state.metrics[source_field.metric_id];\n        const source = this.state.sources[source_field.source_id];\n\n        if (!(metric.id in metrics)) {\n          metrics[metric.id] = {};\n        }\n\n        if (!(source.id in metrics[metric.id])) {\n          metrics[metric.id][source.id] = {};\n        }\n\n        if (!(data_point.run_time in metrics[metric.id][source.id])) {\n          metrics[metric.id][source.id][data_point.run_time] = [];\n        }\n\n        const [val, ] = this.props.converter.convert(data_point.value, metric.units);\n        metrics[metric.id][source.id][data_point.run_time].push({x: new Date(ts * 1000), y: val});\n      }\n    }\n\n    let datasets = {};\n    for (const metric_id in metrics) {\n      if (!metricsToDisplay.includes(metric_id)) {\n        continue;\n      }\n\n      datasets[metric_id] = [];\n\n      for (const source_id in metrics[metric_id]) {\n        const source = this.state.sources[source_id];\n\n        let earliest_run = 0;\n        let latest_run = 0;\n        for (const run_time in metrics[metric_id][source_id]) {\n          if (earliest_run === 0 || run_time < earliest_run) {\n            earliest_run = run_time;\n          } else if (run_time > latest_run) {\n            latest_run = run_time;\n          }\n        }\n\n        for (const run_time in metrics[metric_id][source_id]) {\n          let alpha = 0.15;\n          if (run_time === latest_run) {\n            alpha = 0.8;\n          }\n\n          const run_name = moment.unix(run_time).utc().format(\"HH[Z] dddd Do\") + \" \" + source.name;\n          const color = 'rgba('+lineColors[source.short_name]+','+alpha+')';\n\n          datasets[metric_id].push({\n            label: run_name,\n            data: metrics[metric_id][source_id][run_time],\n            fill: false,\n            backgroundColor: color,\n            borderColor: color,\n            pointBorderColor: color,\n          });\n        }\n      }\n    }\n\n    return datasets;\n  }\n\n  coreMetricsBox(day) {\n    const summary = this.state.summary[day];\n\n    let cloudCoverIcon = '';\n    switch (summary.cloud_cover[0].cover) {\n      case 'clear':\n        cloudCoverIcon = 'wi-day-sunny';\n        break;\n      case 'mostly clear':\n        cloudCoverIcon = 'wi-day-sunny';\n        break;\n      case 'partly cloudy':\n        cloudCoverIcon = 'wi-day-cloudy-high';\n        break;\n      case 'mostly cloudy':\n        cloudCoverIcon = 'wi-cloud';\n        break;\n      case 'cloudy':\n        cloudCoverIcon = 'wi-cloudy';\n        break;\n      default:\n        cloudCoverIcon = 'wi-alien'; // idk\n    }\n\n    return (\n      <Row className=\"justify-content-md-center\">\n        <Col md={2}>\n          <i style={{fontSize: \"7em\"}} className={\"wi \" + cloudCoverIcon}></i>\n        </Col>\n        <Col md={3}>\n          <h4>{this.props.converter.convert(summary.temps[0].temperature, 'K')} {capitalize(summary.cloud_cover[0].cover)}</h4>\n          <p>High: {this.props.converter.convert(summary.high.temperature, 'K')}</p>\n          <p>Low: {this.props.converter.convert(summary.low.temperature, 'K')}</p>\n        </Col>\n      </Row>\n    );\n  }\n\n  summarize(day) {\n    let components = [];\n\n    for (const [index, component] of this.state.summary[day].summary.components.entries()) {\n      let text = '';\n      if (index === 0) {\n        text = capitalize(component.text);\n      } else {\n        text = component.text;\n      }\n      text += ' ';\n\n      if (component.type === 'text') {\n        components.push(<span key={index}>{text}</span>);\n      } else {\n        components.push(<span key={index}>{text}</span>);\n      }\n    }\n\n    return (\n      <span>{components}</span>\n    );\n  }\n\n  render() {\n    if (this.state.summary == null || this.state.sources == null || this.state.source_fields == null || this.state.metrics == null) {\n      return (\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      );\n    }\n\n    let charts = [];\n\n    if (this.state.wx == null) {\n      charts.push(\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      );\n    } else {\n      let datasets = this.chartjsData();\n      const options = {\n        scales: {\n          xAxes: [{\n            type: 'time',\n            distribution: 'linear',\n            time: {\n              unit: 'hour',\n            },\n            ticks: {\n              min: moment(),\n              max: moment().add(3, 'days'),\n            },\n          }],\n        },\n        legend: {\n          display: false,\n        },\n      };\n\n      for (const metric_id in datasets) {\n        const metric = this.state.metrics[metric_id];\n        const data = {\n          datasets: datasets[metric_id],\n        };\n        let opts = {\n          ...options,\n          title: {\n            display: true,\n            text: metric.name,\n          },\n        };\n        charts.push(\n          <Row>\n            <Col>\n              <LineChart key={metric.name} data={data} options={opts}/>\n            </Col>\n          </Row>\n        );\n      };\n    }\n\n    return (\n      <div>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\">\n            <h2>{this.state.location.name}</h2>\n          </Col>\n        </Row>\n        {this.coreMetricsBox(0)}\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\">\n            <p style={{fontSize: \"1.5em\"}}>{this.summarize(0)}</p>\n          </Col>\n        </Row>\n        <hr/>\n        {charts}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport {AsyncTypeahead} from 'react-bootstrap-typeahead';\n\nimport Api from './Api';\n\nconst LocationResult = ({loc}) => (\n  <div>\n    <span>{loc.name}</span>\n  </div>\n);\n\nexport default class LocationSearchField extends React.Component {\n  state = {\n    isLoading: false,\n    options: [],\n  };\n\n  render() {\n    return (\n      <AsyncTypeahead\n        {...this.state}\n        placeholder=\"Location\"\n        minLength={3}\n        onSearch={this._handleSearch}\n        labelKey=\"name\"\n        renderMenuItemChildren={(option, props) => (\n          <LocationResult key={option.id} loc={option} />\n        )}\n        onChange={(selected) => {\n            if (selected.length > 0) {\n                this.props.onChange(selected);\n            }\n        }}\n      />\n    );\n  }\n\n  _handleSearch = (query) => {\n    this.setState({isLoading: true});\n    Api.get(\"/location/search\", {\n      params: {\n        q: query,\n      }\n    }).then(({data}) => {\n      this.setState({\n        isLoading: false,\n        options: data,\n      });\n    });\n  }\n}\n","class UnitConverter {\n    round(n, unit) {\n        if (unit in this.decimalPlaces) {\n            return [Math.round(n * Math.pow(10, this.decimalPlaces[unit])) / Math.pow(10, this.decimalPlaces[unit]), unit];\n        }\n\n        return [n, unit];\n    }\n}\n\nexport class Imperial extends UnitConverter {\n    decimalPlaces = {\n        'F': 0,\n        'ft': 0,\n        'mph': 0,\n        'inHg': 2,\n    };\n\n    convert(val, unit) {\n        switch (unit) {\n            case 'K':\n                return this.round(((val - 273.15) * 1.8) + 32, 'F');\n            case 'm':\n                return this.round(val * 3.2808, 'ft');\n            case 'm/s':\n                return this.round(val * 2.237, 'mph');\n            case 'Pa':\n                return this.round(val * 0.0002953, 'inHg');\n            default:\n                return this.round(val, unit);\n        }\n    }\n}\n\nexport class Metric extends UnitConverter{\n    decimalPlaces = {\n        'C': 0,\n        'm': 0,\n        'm/s': 0,\n        'Pa': 2,\n    };\n\n    convert(val, unit) {\n        switch (unit) {\n            case 'K':\n                return this.round(val - 273.15, 'C');\n            default:\n                return this.round(val, unit);\n        }\n    }\n}\n","import React from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport {\n  Switch,\n  Route,\n  withRouter,\n} from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\n\nimport ForecastView from './ForecastView';\nimport LocationSearchField from './LocationSearch';\nimport {Imperial} from './Units'\n\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    location: null,\n    unitConverter: new Imperial(),\n  };\n\n  render() {\n    if (this.props.location.pathname === \"/\" && navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n\n        this.props.history.push(`/coords/${lat}/${lon}`);\n      });\n    }\n\n    const year = new Date().getFullYear();\n\n    return (\n      <div className=\"App\">\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand>Wx Explore</Navbar.Brand>\n          <Nav className=\"mr-auto\"></Nav>\n\n          <Form inline>\n            <LocationSearchField onChange={(selected) => {\n              const {id} = selected[0];\n              this.props.history.push(`/id/${id}`);\n            }}/>\n          </Form>\n        </Navbar>\n\n        <Container style={{marginTop: \"1em\"}}>\n          <Switch>\n\n            <Route path={`/id/:loc_id`} component={(props) => (<ForecastView converter={this.state.unitConverter} {...props} />)} />\n            <Route path={`/coords/:lat/:lon`} component={(props) => (<ForecastView converter={this.state.unitConverter} {...props} />)} />\n\n            <Route path=\"/\">\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h4>Enter your location to get started</h4>\n                </Col>\n              </Row>\n            </Route>\n\n          </Switch>\n        </Container>\n\n        <footer className=\"footer\">\n          <Container fluid={true} style={{height: \"100%\"}}>\n            <Row className=\"h-100\">\n              <Col xs=\"4\" className=\"align-self-center\">\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/kallsyms/wx_explore\" className=\"text-muted\">\n                  kallsyms/wx_explore on <FontAwesomeIcon icon={faGithub} size=\"lg\"/>\n                </a>\n                <br/>\n                <span className=\"text-muted\">&copy; {year}</span>\n              </Col>\n\n              <Col xs=\"8\" className=\"align-self-center\">\n                <span className=\"text-muted\" style={{fontSize: \"0.75em\", display: \"block\", lineHeight: \"1.5em\"}}>\n                  The data on this website is best-effort, and no guarantees are made about the availability or correctness of the data. It should not be used for critical decision making.\n                </span>\n              </Col>\n            </Row>\n          </Container>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Sentry from '@sentry/browser';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\n\nSentry.init({dsn: process.env.SENTRY_DSN});\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}